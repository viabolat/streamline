first of all the last select_columns operation_type target_entity_name should be the workflow_position name. now some things should be defaults for example the very last workflow_position operation_type(after the last select_columns) should always be ignore_duplicates with the group_by_columns should always have readout_id. another is that when in the select_columns list if sessionstarttime is true then the following should be added within an operation_type curation before the last select_columns:
{
              "sql_expression": "cast(sessionstarttime as timestamp)",
              "new_column_name": "session_start_time_unchecked"
            },
            {
              "sql_expression": "CASE WHEN session_start_time_unchecked < timestamp_millis(0) THEN timestamp_millis(0) ELSE session_start_time_unchecked END",
              "new_column_name": "session_start_time"
            },
            {
              "sql_expression": "unix_millis(current_timestamp)",
              "new_column_name": "cdh_ingest_time_delta_col"
            },
            {
              "sql_expression": "cast(current_date() as string)",
              "new_column_name": "p_ingest_date"
            }
			
			
if dealer is present than the following should be added within an operation_type curation before the last select_columns:
{
              "sql_expression": "json_tuple(dealer,'dealerAddress')",
              "new_column_name": "dealer_address"
            },
			{
              "sql_expression": "json_tuple(dealer_address,'countryCode')",
              "new_column_name": "dealer_country_code"
            }


the workflow should typically look and flow like the one below. again this should dynamically change according to the json file. meaning the code has to determine if it is dealing with arrays,objects,lists,dicts,string,number,boolean,null etc before presenting the user with the list.

here is the list of columns used for this workflow example:

readoutId,
contexts.contextId,
contexts.vehicleData(1*).vehicleOrderData(2*).baseModelCode(3*),(* these are numbered by me to give perspective and show the sequence.they are not in the json file)
sessionStartTime,
dealer.dealerAddress.countryCode



here I will curate this to follow column creation alongside some features that should be default (as detailed above).keep in mind the contexts column (json column) is selected and is from the source_table (this json column has the json data. so i guess asking the user which column is the json column would help determine the column and new column name in wfp2 from_json as well as throughout the workflow)so in the beginning i have to handle the json column before proceeding that is why in wfp2 from the selected column contexts which is a json file (hence the operation_type from_json) we have to array it and then in wfp3 (with an operation_type curation) we have to curate and handle the new column by explode_outer for further processing. now in wfp4 (operation_type curation)we have the data opened up sort of speak we can start extracting data from it and prepare new columns from the extracted data like contextid = context_id and vehicleData(1*) = vehicle_data. in wfp5 (operation_type from_json) we still need to get to baseModelCode(3*) so now that we have vehicleData(1*) we have to array that and then in wfp6 (operation_type curation) we outer_explode it to better handle it followed by wfp7 (operation_type curation because we are still working with vehicleData(1*)) we json_tuple to vehicleOrderData(2*) = vehicle_order_data. since we are not at baseModelCode(3*) we have to from_json array vehicle_order_data in wfp8. since we are handling vehicle_order_data_array we now need to outer_explode it to get data in an operation_type curation in wfp9. in wfp10 we now can extract from vehicle_order_data_exploded baseModelCode(3*) and give it the new name type_code in operation_type curation.within wfp11 (operation_type curation) we can handle any last transformation needed before the last select_columns. wfp12 (operation_type select_columns) should have the list of all the new_column_name within the workflow (excluding the ones with suffix _array,_exploded,_unchecked,_address.also only keeping one of any duplicate new_column_name). finally wfp13 should always be default at the end or after the last select_columns and the group_by_columns should always have readout_id and sort columns should have cdh_ingest_time_delta_col as defaults. the output table name should always be the same as the workflow name given in the beginning. write mode should always be upsert as default.


here is the example json workflow that i have detailed:

"te_prot_vehicle_order": [ 
    {
      "workflow_position": 1,
      "operation_type": "select_columns",
      "operation": {
        "source_entity_name": "source_table",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_01"
        },
        "config": {
          "column_names": [
            "readoutid",
            "contexts",
            "dealer",
            "sessionstarttime"
          ]
        }
      }
    },
    {
      "workflow_position": 2,
      "operation_type": "from_json",
      "operation": {
        "source_entity_name": "prot_vehicle_order_01",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_02"
        },
        "config": {
          "column_name": "contexts",//always the json column
          "new_column_name": "contexts_array",
          "column_schema": "ArrayType(StringType())"
        }
      }
    },
    {
      "workflow_position": 3,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_02",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_03"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "explode_outer(contexts_array)",
              "new_column_name": "context_exploded"
            }
          ]
        }
      }
    },
    {
      "workflow_position": 4,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_03",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_04"
        },
        "config": {
          "rename_columns": [
            {
              "column_name": "readoutId",
              "new_column_name": "readout_id"//default 
            }
          ],
          "custom_columns": [
            {
              "sql_expression": "json_tuple(context_exploded,'vehicleData')",
              "new_column_name": "vehicle_data"
            },
            {
              "sql_expression": "json_tuple(context_exploded,'contextId')",
              "new_column_name": "context_id"
            },
            {
              "sql_expression": "cast(sessionstarttime as timestamp)",
              "new_column_name": "session_start_time_unchecked"//default see above mention
            },
            {
              "sql_expression": "CASE WHEN session_start_time_unchecked < timestamp_millis(0) THEN timestamp_millis(0) ELSE session_start_time_unchecked END",
              "new_column_name": "session_start_time"//default see above mention
            },
            {
              "sql_expression": "unix_millis(current_timestamp)",
              "new_column_name": "cdh_ingest_time_delta_col"//default see above mention
            },
            {
              "sql_expression": "cast(current_date() as string)",
              "new_column_name": "p_ingest_date"//default see above mention
            }
          ]
        },
        "filter": "context_id >= 1 and vehicle_data IS NOT NULL" //if necessary
      }
    },
    {
      "workflow_position": 5,
      "operation_type": "from_json",
      "operation": {
        "source_entity_name": "prot_vehicle_order_04",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_05"
        },
        "config": {
          "column_name": "vehicle_data",
          "new_column_name": "vehicle_data_array",
          "column_schema": "ArrayType(StringType())"
        }
      }
    },
    {
      "workflow_position": 6,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_05",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_06"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "explode_outer(vehicle_data_array)",
              "new_column_name": "vehicle_data_exploded"
            },
            {
              "sql_expression": "cast(context_id as int)",
              "new_column_name": "context_id" //this is specific to the current project not necessary in all
            }
          ]
        }
      }
    },
    {
      "workflow_position": 7,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_06",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_07"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "json_tuple(vehicle_data_exploded,'vehicleOrderData')",
              "new_column_name": "vehicle_order_data"
            }
          ]
        },
        "filter": "vehicle_order_data IS NOT NULL" //if necessary
      }
    },
    {
      "workflow_position": 8,
      "operation_type": "from_json",
      "operation": {
        "source_entity_name": "prot_vehicle_order_07",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_08"
        },
        "config": {
          "column_name": "vehicle_order_data",
          "new_column_name": "vehicle_order_data_array",
          "column_schema": "ArrayType(StringType())"
        }
      }
    },
    {
      "workflow_position": 9,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_08",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_09"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "explode_outer(vehicle_order_data_array)",
              "new_column_name": "vehicle_order_data_exploded"
            }
          ]
        }
      }
    },
    {
      "workflow_position": 10,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_09",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_10"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "json_tuple(vehicle_order_data_exploded,'baseModelCode')",
              "new_column_name": "type_code"
            },
            {
              "sql_expression": "json_tuple(dealer,'dealerAddress')",
              "new_column_name": "dealer_address"
            }
          ]
        }
      }
    },
    {
      "workflow_position": 11,
      "operation_type": "curation",
      "operation": {
        "source_entity_name": "prot_vehicle_order_10",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_11"
        },
        "config": {
          "custom_columns": [
            {
              "sql_expression": "json_tuple(dealer_address,'countryCode')",
              "new_column_name": "dealer_country_code"
            }
          ]
        }
      }
    },
    {
      "workflow_position": 12,
      "operation_type": "select_columns",
      "operation": {
        "source_entity_name": "prot_vehicle_order_11",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_12"
        },
        "config": {
          "column_names": [
            "readout_id",
            "base_model_code"
            "session_start_time",
            "dealer_country_code",
            "cdh_ingest_time_delta_col",
            "p_ingest_date"

          ]
        }
      }
    },
    {
      "workflow_position": 13, //default at the end always
      "operation_type": "ignore_duplicates",
      "operation": {
        "source_entity_name": "prot_vehicle_order_12",
        "target_config": {
          "target_entity_name": "prot_vehicle_order_13"
        },
        "config": {
          "group_by_columns": [
            "readout_id"
          ],
          "sort_columns": [
            "cdh_ingest_time_delta_col"
          ]
        }
      },
      "output": {
        "table_name": "te_prot_vehicle_order",
        "write_mode": "upsert"
      }
    }
  ]
}

operation_type list defaults (others can be used if necessary):

select_columns,
from_json,
curation,
ignore_duplicates

operation_type: from_json should always be followed by 
operation_type: curation to handle the array and explode_outer


readoutId has to be handled as it is in the list 